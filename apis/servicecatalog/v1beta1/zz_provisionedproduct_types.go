/*
Copyright 2022 Upbound Inc.
*/

// Code generated by upjet. DO NOT EDIT.

package v1beta1

import (
	metav1 "k8s.io/apimachinery/pkg/apis/meta/v1"
	"k8s.io/apimachinery/pkg/runtime/schema"

	v1 "github.com/crossplane/crossplane-runtime/apis/common/v1"
)

type OutputsObservation struct {

	// The description of the output.
	Description *string `json:"description,omitempty" tf:"description,omitempty"`

	// Parameter key.
	Key *string `json:"key,omitempty" tf:"key,omitempty"`

	// The output value.
	Value *string `json:"value,omitempty" tf:"value,omitempty"`
}

type OutputsParameters struct {
}

type ProvisionedProductObservation struct {

	// ARN of the provisioned product.
	Arn *string `json:"arn,omitempty" tf:"arn,omitempty"`

	// Set of CloudWatch dashboards that were created when provisioning the product.
	CloudwatchDashboardNames []*string `json:"cloudwatchDashboardNames,omitempty" tf:"cloudwatch_dashboard_names,omitempty"`

	// Time when the provisioned product was created.
	CreatedTime *string `json:"createdTime,omitempty" tf:"created_time,omitempty"`

	// Provisioned Product ID.
	ID *string `json:"id,omitempty" tf:"id,omitempty"`

	// Record identifier of the last request performed on this provisioned product of the following types: ProvisionedProduct, UpdateProvisionedProduct, ExecuteProvisionedProductPlan, TerminateProvisionedProduct.
	LastProvisioningRecordID *string `json:"lastProvisioningRecordId,omitempty" tf:"last_provisioning_record_id,omitempty"`

	// Record identifier of the last request performed on this provisioned product.
	LastRecordID *string `json:"lastRecordId,omitempty" tf:"last_record_id,omitempty"`

	// Record identifier of the last successful request performed on this provisioned product of the following types: ProvisionedProduct, UpdateProvisionedProduct, ExecuteProvisionedProductPlan, TerminateProvisionedProduct.
	LastSuccessfulProvisioningRecordID *string `json:"lastSuccessfulProvisioningRecordId,omitempty" tf:"last_successful_provisioning_record_id,omitempty"`

	// ARN of the launch role associated with the provisioned product.
	LaunchRoleArn *string `json:"launchRoleArn,omitempty" tf:"launch_role_arn,omitempty"`

	// The set of outputs for the product created.
	Outputs []OutputsObservation `json:"outputs,omitempty" tf:"outputs,omitempty"`

	// Current status of the provisioned product. See meanings below.
	Status *string `json:"status,omitempty" tf:"status,omitempty"`

	// Current status message of the provisioned product.
	StatusMessage *string `json:"statusMessage,omitempty" tf:"status_message,omitempty"`

	// Map of tags assigned to the resource, including those inherited from the provider default_tags configuration block.
	TagsAll map[string]*string `json:"tagsAll,omitempty" tf:"tags_all,omitempty"`

	// Type of provisioned product. Valid values are CFN_STACK and CFN_STACKSET.
	Type *string `json:"type,omitempty" tf:"type,omitempty"`
}

type ProvisionedProductParameters struct {

	// Language code. Valid values: en (English), jp (Japanese), zh (Chinese). Default value is en.
	// +kubebuilder:validation:Optional
	AcceptLanguage *string `json:"acceptLanguage,omitempty" tf:"accept_language,omitempty"`

	// Only applies to deleting. If set to true, AWS Service Catalog stops managing the specified provisioned product even if it cannot delete the underlying resources. The default value is false.
	// +kubebuilder:validation:Optional
	IgnoreErrors *bool `json:"ignoreErrors,omitempty" tf:"ignore_errors,omitempty"`

	// User-friendly name of the provisioned product.
	// +kubebuilder:validation:Required
	Name *string `json:"name" tf:"name,omitempty"`

	// Passed to CloudFormation. The SNS topic ARNs to which to publish stack-related events.
	// +kubebuilder:validation:Optional
	NotificationArns []*string `json:"notificationArns,omitempty" tf:"notification_arns,omitempty"`

	// Path identifier of the product. This value is optional if the product has a default path, and required if the product has more than one path. To list the paths for a product, use aws_servicecatalog_launch_paths. When required, you must provide path_id or path_name, but not both.
	// +kubebuilder:validation:Optional
	PathID *string `json:"pathId,omitempty" tf:"path_id,omitempty"`

	// Name of the path. You must provide path_id or path_name, but not both.
	// +kubebuilder:validation:Optional
	PathName *string `json:"pathName,omitempty" tf:"path_name,omitempty"`

	// Product identifier. For example, prod-abcdzk7xy33qa. You must provide product_id or product_name, but not both.
	// +crossplane:generate:reference:type=github.com/upbound/provider-aws/apis/servicecatalog/v1beta1.Product
	// +kubebuilder:validation:Optional
	ProductID *string `json:"productId,omitempty" tf:"product_id,omitempty"`

	// Reference to a Product in servicecatalog to populate productId.
	// +kubebuilder:validation:Optional
	ProductIDRef *v1.Reference `json:"productIdRef,omitempty" tf:"-"`

	// Selector for a Product in servicecatalog to populate productId.
	// +kubebuilder:validation:Optional
	ProductIDSelector *v1.Selector `json:"productIdSelector,omitempty" tf:"-"`

	// Name of the product. You must provide product_id or product_name, but not both.
	// +kubebuilder:validation:Optional
	ProductName *string `json:"productName,omitempty" tf:"product_name,omitempty"`

	// Identifier of the provisioning artifact. For example, pa-4abcdjnxjj6ne. You must provide the provisioning_artifact_id or provisioning_artifact_name, but not both.
	// +crossplane:generate:reference:type=github.com/upbound/provider-aws/apis/servicecatalog/v1beta1.ProvisioningArtifact
	// +kubebuilder:validation:Optional
	ProvisioningArtifactID *string `json:"provisioningArtifactId,omitempty" tf:"provisioning_artifact_id,omitempty"`

	// Reference to a ProvisioningArtifact in servicecatalog to populate provisioningArtifactId.
	// +kubebuilder:validation:Optional
	ProvisioningArtifactIDRef *v1.Reference `json:"provisioningArtifactIdRef,omitempty" tf:"-"`

	// Selector for a ProvisioningArtifact in servicecatalog to populate provisioningArtifactId.
	// +kubebuilder:validation:Optional
	ProvisioningArtifactIDSelector *v1.Selector `json:"provisioningArtifactIdSelector,omitempty" tf:"-"`

	// Name of the provisioning artifact. You must provide the provisioning_artifact_id or provisioning_artifact_name, but not both.
	// +kubebuilder:validation:Optional
	ProvisioningArtifactName *string `json:"provisioningArtifactName,omitempty" tf:"provisioning_artifact_name,omitempty"`

	// Configuration block with parameters specified by the administrator that are required for provisioning the product. See details below.
	// +kubebuilder:validation:Optional
	ProvisioningParameters []ProvisioningParametersParameters `json:"provisioningParameters,omitempty" tf:"provisioning_parameters,omitempty"`

	// Region is the region you'd like your resource to be created in.
	// +upjet:crd:field:TFTag=-
	// +kubebuilder:validation:Required
	Region *string `json:"region" tf:"-"`

	// Only applies to deleting. Whether to delete the Service Catalog provisioned product but leave the CloudFormation stack, stack set, or the underlying resources of the deleted provisioned product. The default value is false.
	// +kubebuilder:validation:Optional
	RetainPhysicalResources *bool `json:"retainPhysicalResources,omitempty" tf:"retain_physical_resources,omitempty"`

	// Configuration block with information about the provisioning preferences for a stack set. See details below.
	// +kubebuilder:validation:Optional
	StackSetProvisioningPreferences []StackSetProvisioningPreferencesParameters `json:"stackSetProvisioningPreferences,omitempty" tf:"stack_set_provisioning_preferences,omitempty"`

	// Key-value map of resource tags.
	// +kubebuilder:validation:Optional
	Tags map[string]*string `json:"tags,omitempty" tf:"tags,omitempty"`
}

type ProvisioningParametersObservation struct {
}

type ProvisioningParametersParameters struct {

	// Parameter key.
	// +kubebuilder:validation:Required
	Key *string `json:"key" tf:"key,omitempty"`

	// Whether to ignore value and keep the previous parameter value. Ignored when initially provisioning a product.
	// +kubebuilder:validation:Optional
	UsePreviousValue *bool `json:"usePreviousValue,omitempty" tf:"use_previous_value,omitempty"`

	// Parameter value.
	// +kubebuilder:validation:Optional
	Value *string `json:"value,omitempty" tf:"value,omitempty"`
}

type StackSetProvisioningPreferencesObservation struct {
}

type StackSetProvisioningPreferencesParameters struct {

	// One or more AWS accounts that will have access to the provisioned product. The AWS accounts specified should be within the list of accounts in the STACKSET constraint. To get the list of accounts in the STACKSET constraint, use the aws_servicecatalog_provisioning_parameters data source. If no values are specified, the default value is all accounts from the STACKSET constraint.
	// +kubebuilder:validation:Optional
	Accounts []*string `json:"accounts,omitempty" tf:"accounts,omitempty"`

	// Number of accounts, per region, for which this operation can fail before AWS Service Catalog stops the operation in that region. If the operation is stopped in a region, AWS Service Catalog doesn't attempt the operation in any subsequent regions. You must specify either failure_tolerance_count or failure_tolerance_percentage, but not both. The default value is 0 if no value is specified.
	// +kubebuilder:validation:Optional
	FailureToleranceCount *float64 `json:"failureToleranceCount,omitempty" tf:"failure_tolerance_count,omitempty"`

	// Percentage of accounts, per region, for which this stack operation can fail before AWS Service Catalog stops the operation in that region. If the operation is stopped in a region, AWS Service Catalog doesn't attempt the operation in any subsequent regions. When calculating the number of accounts based on the specified percentage, AWS Service Catalog rounds down to the next whole number. You must specify either failure_tolerance_count or failure_tolerance_percentage, but not both.
	// +kubebuilder:validation:Optional
	FailureTolerancePercentage *float64 `json:"failureTolerancePercentage,omitempty" tf:"failure_tolerance_percentage,omitempty"`

	// Maximum number of accounts in which to perform this operation at one time. This is dependent on the value of failure_tolerance_count. max_concurrency_count is at most one more than the failure_tolerance_count. Note that this setting lets you specify the maximum for operations. For large deployments, under certain circumstances the actual number of accounts acted upon concurrently may be lower due to service throttling. You must specify either max_concurrency_count or max_concurrency_percentage, but not both.
	// +kubebuilder:validation:Optional
	MaxConcurrencyCount *float64 `json:"maxConcurrencyCount,omitempty" tf:"max_concurrency_count,omitempty"`

	// Maximum percentage of accounts in which to perform this operation at one time. When calculating the number of accounts based on the specified percentage, AWS Service Catalog rounds down to the next whole number. This is true except in cases where rounding down would result is zero. In this case, AWS Service Catalog sets the number as 1 instead. Note that this setting lets you specify the maximum for operations. For large deployments, under certain circumstances the actual number of accounts acted upon concurrently may be lower due to service throttling. You must specify either max_concurrency_count or max_concurrency_percentage, but not both.
	// +kubebuilder:validation:Optional
	MaxConcurrencyPercentage *float64 `json:"maxConcurrencyPercentage,omitempty" tf:"max_concurrency_percentage,omitempty"`

	// One or more AWS Regions where the provisioned product will be available. The specified regions should be within the list of regions from the STACKSET constraint. To get the list of regions in the STACKSET constraint, use the aws_servicecatalog_provisioning_parameters data source. If no values are specified, the default value is all regions from the STACKSET constraint.
	// +kubebuilder:validation:Optional
	Regions []*string `json:"regions,omitempty" tf:"regions,omitempty"`
}

// ProvisionedProductSpec defines the desired state of ProvisionedProduct
type ProvisionedProductSpec struct {
	v1.ResourceSpec `json:",inline"`
	ForProvider     ProvisionedProductParameters `json:"forProvider"`
}

// ProvisionedProductStatus defines the observed state of ProvisionedProduct.
type ProvisionedProductStatus struct {
	v1.ResourceStatus `json:",inline"`
	AtProvider        ProvisionedProductObservation `json:"atProvider,omitempty"`
}

// +kubebuilder:object:root=true

// ProvisionedProduct is the Schema for the ProvisionedProducts API. Manages a Service Catalog Provisioned Product
// +kubebuilder:printcolumn:name="READY",type="string",JSONPath=".status.conditions[?(@.type=='Ready')].status"
// +kubebuilder:printcolumn:name="SYNCED",type="string",JSONPath=".status.conditions[?(@.type=='Synced')].status"
// +kubebuilder:printcolumn:name="EXTERNAL-NAME",type="string",JSONPath=".metadata.annotations.crossplane\\.io/external-name"
// +kubebuilder:printcolumn:name="AGE",type="date",JSONPath=".metadata.creationTimestamp"
// +kubebuilder:subresource:status
// +kubebuilder:resource:scope=Cluster,categories={crossplane,managed,aws}
type ProvisionedProduct struct {
	metav1.TypeMeta   `json:",inline"`
	metav1.ObjectMeta `json:"metadata,omitempty"`
	Spec              ProvisionedProductSpec   `json:"spec"`
	Status            ProvisionedProductStatus `json:"status,omitempty"`
}

// +kubebuilder:object:root=true

// ProvisionedProductList contains a list of ProvisionedProducts
type ProvisionedProductList struct {
	metav1.TypeMeta `json:",inline"`
	metav1.ListMeta `json:"metadata,omitempty"`
	Items           []ProvisionedProduct `json:"items"`
}

// Repository type metadata.
var (
	ProvisionedProduct_Kind             = "ProvisionedProduct"
	ProvisionedProduct_GroupKind        = schema.GroupKind{Group: CRDGroup, Kind: ProvisionedProduct_Kind}.String()
	ProvisionedProduct_KindAPIVersion   = ProvisionedProduct_Kind + "." + CRDGroupVersion.String()
	ProvisionedProduct_GroupVersionKind = CRDGroupVersion.WithKind(ProvisionedProduct_Kind)
)

func init() {
	SchemeBuilder.Register(&ProvisionedProduct{}, &ProvisionedProductList{})
}
