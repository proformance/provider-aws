---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.8.0
  creationTimestamp: null
  name: provisionedproducts.servicecatalog.aws.upbound.io
spec:
  group: servicecatalog.aws.upbound.io
  names:
    categories:
    - crossplane
    - managed
    - aws
    kind: ProvisionedProduct
    listKind: ProvisionedProductList
    plural: provisionedproducts
    singular: provisionedproduct
  scope: Cluster
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.conditions[?(@.type=='Ready')].status
      name: READY
      type: string
    - jsonPath: .status.conditions[?(@.type=='Synced')].status
      name: SYNCED
      type: string
    - jsonPath: .metadata.annotations.crossplane\.io/external-name
      name: EXTERNAL-NAME
      type: string
    - jsonPath: .metadata.creationTimestamp
      name: AGE
      type: date
    name: v1beta1
    schema:
      openAPIV3Schema:
        description: ProvisionedProduct is the Schema for the ProvisionedProducts
          API. Manages a Service Catalog Provisioned Product
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: ProvisionedProductSpec defines the desired state of ProvisionedProduct
            properties:
              deletionPolicy:
                default: Delete
                description: DeletionPolicy specifies what will happen to the underlying
                  external when this managed resource is deleted - either "Delete"
                  or "Orphan" the external resource.
                enum:
                - Orphan
                - Delete
                type: string
              forProvider:
                properties:
                  acceptLanguage:
                    description: 'Language code. Valid values: en (English), jp (Japanese),
                      zh (Chinese). Default value is en.'
                    type: string
                  ignoreErrors:
                    description: Only applies to deleting. If set to true, AWS Service
                      Catalog stops managing the specified provisioned product even
                      if it cannot delete the underlying resources. The default value
                      is false.
                    type: boolean
                  name:
                    description: User-friendly name of the provisioned product.
                    type: string
                  notificationArns:
                    description: Passed to CloudFormation. The SNS topic ARNs to which
                      to publish stack-related events.
                    items:
                      type: string
                    type: array
                  pathId:
                    description: Path identifier of the product. This value is optional
                      if the product has a default path, and required if the product
                      has more than one path. To list the paths for a product, use
                      aws_servicecatalog_launch_paths. When required, you must provide
                      path_id or path_name, but not both.
                    type: string
                  pathName:
                    description: Name of the path. You must provide path_id or path_name,
                      but not both.
                    type: string
                  productId:
                    description: Product identifier. For example, prod-abcdzk7xy33qa.
                      You must provide product_id or product_name, but not both.
                    type: string
                  productName:
                    description: Name of the product. You must provide product_id
                      or product_name, but not both.
                    type: string
                  productNameRef:
                    description: Reference to a Product in servicecatalog to populate
                      productName.
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                      policy:
                        description: Policies for referencing.
                        properties:
                          resolution:
                            default: Required
                            description: Resolution specifies whether resolution of
                              this reference is required. The default is 'Required',
                              which means the reconcile will fail if the reference
                              cannot be resolved. 'Optional' means this reference
                              will be a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: Resolve specifies when this reference should
                              be resolved. The default is 'IfNotPresent', which will
                              attempt to resolve the reference only when the corresponding
                              field is not present. Use 'Always' to resolve the reference
                              on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    required:
                    - name
                    type: object
                  productNameSelector:
                    description: Selector for a Product in servicecatalog to populate
                      productName.
                    properties:
                      matchControllerRef:
                        description: MatchControllerRef ensures an object with the
                          same controller reference as the selecting object is selected.
                        type: boolean
                      matchLabels:
                        additionalProperties:
                          type: string
                        description: MatchLabels ensures an object with matching labels
                          is selected.
                        type: object
                      policy:
                        description: Policies for selection.
                        properties:
                          resolution:
                            default: Required
                            description: Resolution specifies whether resolution of
                              this reference is required. The default is 'Required',
                              which means the reconcile will fail if the reference
                              cannot be resolved. 'Optional' means this reference
                              will be a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: Resolve specifies when this reference should
                              be resolved. The default is 'IfNotPresent', which will
                              attempt to resolve the reference only when the corresponding
                              field is not present. Use 'Always' to resolve the reference
                              on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    type: object
                  provisioningArtifactId:
                    description: Identifier of the provisioning artifact. For example,
                      pa-4abcdjnxjj6ne. You must provide the provisioning_artifact_id
                      or provisioning_artifact_name, but not both.
                    type: string
                  provisioningArtifactName:
                    description: Name of the provisioning artifact. You must provide
                      the provisioning_artifact_id or provisioning_artifact_name,
                      but not both.
                    type: string
                  provisioningArtifactNameRef:
                    description: Reference to a ProvisioningArtifact in servicecatalog
                      to populate provisioningArtifactName.
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                      policy:
                        description: Policies for referencing.
                        properties:
                          resolution:
                            default: Required
                            description: Resolution specifies whether resolution of
                              this reference is required. The default is 'Required',
                              which means the reconcile will fail if the reference
                              cannot be resolved. 'Optional' means this reference
                              will be a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: Resolve specifies when this reference should
                              be resolved. The default is 'IfNotPresent', which will
                              attempt to resolve the reference only when the corresponding
                              field is not present. Use 'Always' to resolve the reference
                              on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    required:
                    - name
                    type: object
                  provisioningArtifactNameSelector:
                    description: Selector for a ProvisioningArtifact in servicecatalog
                      to populate provisioningArtifactName.
                    properties:
                      matchControllerRef:
                        description: MatchControllerRef ensures an object with the
                          same controller reference as the selecting object is selected.
                        type: boolean
                      matchLabels:
                        additionalProperties:
                          type: string
                        description: MatchLabels ensures an object with matching labels
                          is selected.
                        type: object
                      policy:
                        description: Policies for selection.
                        properties:
                          resolution:
                            default: Required
                            description: Resolution specifies whether resolution of
                              this reference is required. The default is 'Required',
                              which means the reconcile will fail if the reference
                              cannot be resolved. 'Optional' means this reference
                              will be a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: Resolve specifies when this reference should
                              be resolved. The default is 'IfNotPresent', which will
                              attempt to resolve the reference only when the corresponding
                              field is not present. Use 'Always' to resolve the reference
                              on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    type: object
                  provisioningParameters:
                    description: Configuration block with parameters specified by
                      the administrator that are required for provisioning the product.
                      See details below.
                    items:
                      properties:
                        key:
                          description: Parameter key.
                          type: string
                        usePreviousValue:
                          description: Whether to ignore value and keep the previous
                            parameter value. Ignored when initially provisioning a
                            product.
                          type: boolean
                        value:
                          description: Parameter value.
                          type: string
                      required:
                      - key
                      type: object
                    type: array
                  region:
                    description: Region is the region you'd like your resource to
                      be created in.
                    type: string
                  retainPhysicalResources:
                    description: Only applies to deleting. Whether to delete the Service
                      Catalog provisioned product but leave the CloudFormation stack,
                      stack set, or the underlying resources of the deleted provisioned
                      product. The default value is false.
                    type: boolean
                  stackSetProvisioningPreferences:
                    description: Configuration block with information about the provisioning
                      preferences for a stack set. See details below.
                    items:
                      properties:
                        accounts:
                          description: One or more AWS accounts that will have access
                            to the provisioned product. The AWS accounts specified
                            should be within the list of accounts in the STACKSET
                            constraint. To get the list of accounts in the STACKSET
                            constraint, use the aws_servicecatalog_provisioning_parameters
                            data source. If no values are specified, the default value
                            is all accounts from the STACKSET constraint.
                          items:
                            type: string
                          type: array
                        failureToleranceCount:
                          description: Number of accounts, per region, for which this
                            operation can fail before AWS Service Catalog stops the
                            operation in that region. If the operation is stopped
                            in a region, AWS Service Catalog doesn't attempt the operation
                            in any subsequent regions. You must specify either failure_tolerance_count
                            or failure_tolerance_percentage, but not both. The default
                            value is 0 if no value is specified.
                          type: number
                        failureTolerancePercentage:
                          description: Percentage of accounts, per region, for which
                            this stack operation can fail before AWS Service Catalog
                            stops the operation in that region. If the operation is
                            stopped in a region, AWS Service Catalog doesn't attempt
                            the operation in any subsequent regions. When calculating
                            the number of accounts based on the specified percentage,
                            AWS Service Catalog rounds down to the next whole number.
                            You must specify either failure_tolerance_count or failure_tolerance_percentage,
                            but not both.
                          type: number
                        maxConcurrencyCount:
                          description: Maximum number of accounts in which to perform
                            this operation at one time. This is dependent on the value
                            of failure_tolerance_count. max_concurrency_count is at
                            most one more than the failure_tolerance_count. Note that
                            this setting lets you specify the maximum for operations.
                            For large deployments, under certain circumstances the
                            actual number of accounts acted upon concurrently may
                            be lower due to service throttling. You must specify either
                            max_concurrency_count or max_concurrency_percentage, but
                            not both.
                          type: number
                        maxConcurrencyPercentage:
                          description: Maximum percentage of accounts in which to
                            perform this operation at one time. When calculating the
                            number of accounts based on the specified percentage,
                            AWS Service Catalog rounds down to the next whole number.
                            This is true except in cases where rounding down would
                            result is zero. In this case, AWS Service Catalog sets
                            the number as 1 instead. Note that this setting lets you
                            specify the maximum for operations. For large deployments,
                            under certain circumstances the actual number of accounts
                            acted upon concurrently may be lower due to service throttling.
                            You must specify either max_concurrency_count or max_concurrency_percentage,
                            but not both.
                          type: number
                        regions:
                          description: One or more AWS Regions where the provisioned
                            product will be available. The specified regions should
                            be within the list of regions from the STACKSET constraint.
                            To get the list of regions in the STACKSET constraint,
                            use the aws_servicecatalog_provisioning_parameters data
                            source. If no values are specified, the default value
                            is all regions from the STACKSET constraint.
                          items:
                            type: string
                          type: array
                      type: object
                    type: array
                  tags:
                    additionalProperties:
                      type: string
                    description: Key-value map of resource tags.
                    type: object
                required:
                - name
                - region
                type: object
              providerConfigRef:
                default:
                  name: default
                description: ProviderConfigReference specifies how the provider that
                  will be used to create, observe, update, and delete this managed
                  resource should be configured.
                properties:
                  name:
                    description: Name of the referenced object.
                    type: string
                  policy:
                    description: Policies for referencing.
                    properties:
                      resolution:
                        default: Required
                        description: Resolution specifies whether resolution of this
                          reference is required. The default is 'Required', which
                          means the reconcile will fail if the reference cannot be
                          resolved. 'Optional' means this reference will be a no-op
                          if it cannot be resolved.
                        enum:
                        - Required
                        - Optional
                        type: string
                      resolve:
                        description: Resolve specifies when this reference should
                          be resolved. The default is 'IfNotPresent', which will attempt
                          to resolve the reference only when the corresponding field
                          is not present. Use 'Always' to resolve the reference on
                          every reconcile.
                        enum:
                        - Always
                        - IfNotPresent
                        type: string
                    type: object
                required:
                - name
                type: object
              providerRef:
                description: 'ProviderReference specifies the provider that will be
                  used to create, observe, update, and delete this managed resource.
                  Deprecated: Please use ProviderConfigReference, i.e. `providerConfigRef`'
                properties:
                  name:
                    description: Name of the referenced object.
                    type: string
                  policy:
                    description: Policies for referencing.
                    properties:
                      resolution:
                        default: Required
                        description: Resolution specifies whether resolution of this
                          reference is required. The default is 'Required', which
                          means the reconcile will fail if the reference cannot be
                          resolved. 'Optional' means this reference will be a no-op
                          if it cannot be resolved.
                        enum:
                        - Required
                        - Optional
                        type: string
                      resolve:
                        description: Resolve specifies when this reference should
                          be resolved. The default is 'IfNotPresent', which will attempt
                          to resolve the reference only when the corresponding field
                          is not present. Use 'Always' to resolve the reference on
                          every reconcile.
                        enum:
                        - Always
                        - IfNotPresent
                        type: string
                    type: object
                required:
                - name
                type: object
              publishConnectionDetailsTo:
                description: PublishConnectionDetailsTo specifies the connection secret
                  config which contains a name, metadata and a reference to secret
                  store config to which any connection details for this managed resource
                  should be written. Connection details frequently include the endpoint,
                  username, and password required to connect to the managed resource.
                properties:
                  configRef:
                    default:
                      name: default
                    description: SecretStoreConfigRef specifies which secret store
                      config should be used for this ConnectionSecret.
                    properties:
                      name:
                        description: Name of the referenced object.
                        type: string
                      policy:
                        description: Policies for referencing.
                        properties:
                          resolution:
                            default: Required
                            description: Resolution specifies whether resolution of
                              this reference is required. The default is 'Required',
                              which means the reconcile will fail if the reference
                              cannot be resolved. 'Optional' means this reference
                              will be a no-op if it cannot be resolved.
                            enum:
                            - Required
                            - Optional
                            type: string
                          resolve:
                            description: Resolve specifies when this reference should
                              be resolved. The default is 'IfNotPresent', which will
                              attempt to resolve the reference only when the corresponding
                              field is not present. Use 'Always' to resolve the reference
                              on every reconcile.
                            enum:
                            - Always
                            - IfNotPresent
                            type: string
                        type: object
                    required:
                    - name
                    type: object
                  metadata:
                    description: Metadata is the metadata for connection secret.
                    properties:
                      annotations:
                        additionalProperties:
                          type: string
                        description: Annotations are the annotations to be added to
                          connection secret. - For Kubernetes secrets, this will be
                          used as "metadata.annotations". - It is up to Secret Store
                          implementation for others store types.
                        type: object
                      labels:
                        additionalProperties:
                          type: string
                        description: Labels are the labels/tags to be added to connection
                          secret. - For Kubernetes secrets, this will be used as "metadata.labels".
                          - It is up to Secret Store implementation for others store
                          types.
                        type: object
                      type:
                        description: Type is the SecretType for the connection secret.
                          - Only valid for Kubernetes Secret Stores.
                        type: string
                    type: object
                  name:
                    description: Name is the name of the connection secret.
                    type: string
                required:
                - name
                type: object
              writeConnectionSecretToRef:
                description: WriteConnectionSecretToReference specifies the namespace
                  and name of a Secret to which any connection details for this managed
                  resource should be written. Connection details frequently include
                  the endpoint, username, and password required to connect to the
                  managed resource. This field is planned to be replaced in a future
                  release in favor of PublishConnectionDetailsTo. Currently, both
                  could be set independently and connection details would be published
                  to both without affecting each other.
                properties:
                  name:
                    description: Name of the secret.
                    type: string
                  namespace:
                    description: Namespace of the secret.
                    type: string
                required:
                - name
                - namespace
                type: object
            required:
            - forProvider
            type: object
          status:
            description: ProvisionedProductStatus defines the observed state of ProvisionedProduct.
            properties:
              atProvider:
                properties:
                  arn:
                    description: ARN of the provisioned product.
                    type: string
                  cloudwatchDashboardNames:
                    description: Set of CloudWatch dashboards that were created when
                      provisioning the product.
                    items:
                      type: string
                    type: array
                  createdTime:
                    description: Time when the provisioned product was created.
                    type: string
                  id:
                    description: Provisioned Product ID.
                    type: string
                  lastProvisioningRecordId:
                    description: 'Record identifier of the last request performed
                      on this provisioned product of the following types: ProvisionedProduct,
                      UpdateProvisionedProduct, ExecuteProvisionedProductPlan, TerminateProvisionedProduct.'
                    type: string
                  lastRecordId:
                    description: Record identifier of the last request performed on
                      this provisioned product.
                    type: string
                  lastSuccessfulProvisioningRecordId:
                    description: 'Record identifier of the last successful request
                      performed on this provisioned product of the following types:
                      ProvisionedProduct, UpdateProvisionedProduct, ExecuteProvisionedProductPlan,
                      TerminateProvisionedProduct.'
                    type: string
                  launchRoleArn:
                    description: ARN of the launch role associated with the provisioned
                      product.
                    type: string
                  outputs:
                    description: The set of outputs for the product created.
                    items:
                      properties:
                        description:
                          description: The description of the output.
                          type: string
                        key:
                          description: Parameter key.
                          type: string
                        value:
                          description: The output value.
                          type: string
                      type: object
                    type: array
                  status:
                    description: Current status of the provisioned product. See meanings
                      below.
                    type: string
                  statusMessage:
                    description: Current status message of the provisioned product.
                    type: string
                  tagsAll:
                    additionalProperties:
                      type: string
                    description: Map of tags assigned to the resource, including those
                      inherited from the provider default_tags configuration block.
                    type: object
                  type:
                    description: Type of provisioned product. Valid values are CFN_STACK
                      and CFN_STACKSET.
                    type: string
                type: object
              conditions:
                description: Conditions of the resource.
                items:
                  description: A Condition that may apply to a resource.
                  properties:
                    lastTransitionTime:
                      description: LastTransitionTime is the last time this condition
                        transitioned from one status to another.
                      format: date-time
                      type: string
                    message:
                      description: A Message containing details about this condition's
                        last transition from one status to another, if any.
                      type: string
                    reason:
                      description: A Reason for this condition's last transition from
                        one status to another.
                      type: string
                    status:
                      description: Status of this condition; is it currently True,
                        False, or Unknown?
                      type: string
                    type:
                      description: Type of this condition. At most one of each condition
                        type may apply to a resource at any point in time.
                      type: string
                  required:
                  - lastTransitionTime
                  - reason
                  - status
                  - type
                  type: object
                type: array
            type: object
        required:
        - spec
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
